{$CLEO .cs}
thread 'IIIVCHud'

// 719570 : CFont::SetDropShadowPosition
// 719590 : CFont::SetOutlinePosition

const
    _MoneyPosX        = 0x58F5FC
    _MoneyPosY        = 0x58F5DC
    _MoneyWidth       = 0x58F564
    _MoneyHeight      = 0x58F54E
    _MoneyBorderInt   = 0x58F58F
    _MoneyBorderByte1 = 0x58F58D
    _MoneyBorderByte2 = 0x58F586
    _MoneyColor       = 0x58F499
    
    _ClockPosX        = 0x58EC16
    _ClockPosY        = 0x58EC04
    _ClockWidth       = 0x58EB47
    _ClockHeight      = 0x58EB31
    _ClockBorderInt   = 0x58EB72
    _ClockBorderByte1 = 0x58EB70
    _ClockColor       = 0x58EBD1
    
    _WeaponBoxPosX    = 0x58F927
    _WeaponBoxPosY    = 0x58F913
    _WeaponBoxWidth   = 0x58D935 // alternative addresses: 0x58D8CB    0x58D935
    _WeaponBoxHeight  = 0x58D94D // alternative addresses: 0x58D896    0x58D94D
    
    _WeaponAmmoPosX   = 0x58FA02
    _WeaponAmmoPosY   = 0x58F9DC
    _WeaponAmmoWidth  = 0x5894CD
    _WeaponAmmoHeight = 0x5894B7
    _WeaponAmmoBorder = 0x589505
    _WeaponAmmoColor2 = 0x5895FD
    
    _WantedUnknown                      = 0x58FA12
    _ShowInactiveWantedStars            = 0x58DD1B
    _WantedBorder1                      = 0x58DD43
    _ActiveWantedStarsColorId           = 0x58DDC9
    _ActiveWantedStarsColor             = 0x58DDD0
    _ActiveWantedStarsPosYId            = 0x58DE23
    
    _WantedUnknownProp1                 = 0x58DE84
    _WantedUnknownProp2                 = 0x58DE9F
    _WantedUnknownProp3                 = 0x58DEBA
    _InactiveWantedAlphaProp4           = 0x58DF29
    _InactiveWantedHeightProp5          = 0x58DF61
    _InactiveWantedWidthProp6           = 0x58DF7D
    
    _WantedStarsActiveAndInactivePosX   = 0x58DD0F
    _WantedStarsInactivePosY            = 0x58DFB3
    _WantedStarsActivePosY              = 0x58DDFC
    _WantedStarsActivePosYRelated       = 0x58DEF5
    
    _WantedStarsHeightRelated           = 0x58DCAA
    _ActiveWantedStarsHeight            = 0x58DD70
    _InactiveWantedStarsHeight          = 0x58DF5D
    
    _WantedStarsWidthRelated            = 0x58DCC0
    _ActiveWantedStarsWidth             = 0x58DD86
    _InactiveWantedStarsWidth           = 0x58DF79
    
    _SpaceBetweenStars                  = 0x58DFED

    _RadioStationFontstyle  = 0x4E9EF9
    _RadioStationBorder     = 0x4E9F5C
    _RadioStationBorderId   = 0x4E9F91
    _RadioStationRGBA1      = 0x4E9F98
    _RadioStationUnknownId  = 0x4E9FA7
    _RadioStationRGBA2      = 0x4E9FAE
    _RadioStationWidth      = 0x4E9F38
    _RadioStationHeight     = 0x4E9F22
    _RadioStationUnknown    = 0x58B01D
end

gosub @InitializeAssemblerRegion
{
// SA
0AB1: @EditBaseColours 6 0xFF1D19B4 0xFF2C6836 0xFF7F3C32 0xFF106290 0xFFFC6EA8 0xFF63C0E2
0AB1: @EditMoney 10 unknown 22.0 122 pos_xy 32.0 89.0 size 0.55 1.10 classic_flag false border_ids 2 0 rgba 0xBAB22C
0AB1: @EditClock 7 pos_xy 32.0 22.0 size 0.55 1.10 border 1616410 2 rgba 0xBAB22C
0AB1: @EditWeapon 10 box_xy 32.0 20.0 box_size 47.0 58.0 ammo_xy 32.0 20.0 ammo_size 0.30 0.70 ammo_border 1 ammo_color_id 3
0AB1: @EditWantedLevelStars 13 classic_flag false rgba_addr 0xBAB22C unknown_float 47.0 active_color_id 6 position 29.0 114.0 inactive_y 114.0 size 1.21 0.605 space_between 18.0 inactive_RGB 0 0 0
0AB1: @EditRadioStation 9 fontstyle 2 border 2291248 border_id 6 rgba 0xBAB22C unknown_id 8 unknown_rgba 0xBAB22C size 0.60 0.90 unknown_float 3000.0
0AB1: @EditVehicleText 8 size 1.20 1.5 fontstyle 2 border_id 2 classic_flag false vehicle_zone_rgba 0xBAB22C color_id 1 pos_y 104.0
0AB1: @EditZoneText 9 unknown_float 3000.0 size 1.20 1.90 border_id 2 classic_flag false fontstyle 0 rgba 0xBAB22C vehicle_zone_rgba 0xBAB22C pos_y 76.0
0AB1: @GeneralSettings 1 flag_activate false
0AB1: @EditRadar 4 position 40.0 104.0 size 94.0 76.0
0AB1: @EditStyledText1 7 classic_flag false rgba 0xBAB22C size 1.3 1.8 fontstyle 3 border 2 color 6 position 0.0 0.0 ymult 10.0 25.0 15.0
0AB1: @EditStyledText2 8 classic_flag false rgba 0xBAB22C size 0.0 1.30 fontstyle 3 border 2 xy_pos 20.0 115.0
0AB1: @EditStyledText3 10 classic_flag false rgba 0xBAB22C size 2.10 2.10 fontstyle 0 border 3 color 4 xy_pos 640.0 443.4285278 ymult 30.0 // WARNING!!!! posibly 640.0 won't work on screen sizes different from 1280x1024 because 640.0 = 1280 / 2
0AB1: @EditStyledText4 8 classic_flag false rgba 0xBAB22C size 0.60 1.35 fontstyle 2 border 2 color 6 pos_y 155.0
0AB1: @EditStyledText5 8 classic_flag false rgba 0xBAB22C size 0.60 1.35 fontstyle 2 border 2 color 6 pos_y 140.0
0AB1: @EditStyledText6 8 classic_flag false rgba 0xBAB22C size 0.60 1.35 fontstyle 2 border 0 color 4 pos_y 217.0
0AB1: @EditStyledText7 8 classic_flag false rgba 0xBAB22C size 0.0 0.0 fontstyle 3 border 0 color 0 pos_y 0.0
0AB1: @EditGarageMessages 9 classic_flag false rgba 0xBAB22C size 0.5 1.4 fontstyle 2 border 2 color 3 pos_y 155.0 linewidth_factor 230.0
0AB1: @EditMissionTimers 17 classic_flag false rgba 0 size 0.5 1.0 fontstyle 2 border 2 timer_y 148.0 status_text_y 20.0 timer_x 32.0 timer_x_offset 90.0 stext_x 32.0 stext_x_offset 90.0 stext_space_between 20.0 bar_pos 32.0 6.0 bar_size 61.0 9.0
0AB1: @ChangeRedStuffColor 3 red 255 green 0 blue 0
}
// III
0AC6: 1@ = label @IIIBaseColours offset 
0AB1: @EditBaseColours 6 0xFF492B71 0xFF6AA05F 0xFFF3A780 0xFF02ACDC 0xFFFC6EA8 0xFF6AC4D2
0AB1: @EditMoney 10 unknown 22.5 235 pos_xy 110.0 43.5 size 0.80 1.34 classic_flag true border_ids 1 1 rgba 1@
0AB1: @EditClock 7 pos_xy 110.0 22.5 size 0.80 1.34 border 1616378 1 rgba 1@
0AB1: @EditWeapon 10 box_xy -12.5 27.5 box_size 63.5 63.5 ammo_xy -12.5 27.5 ammo_size 0.40 0.60 ammo_border 0 ammo_color_id 6
0AB1: @EditWantedLevelStars 13 classic_flag true rgba_addr 1@ unknown_float 65.0 active_color_id 4 position 52.30 87.0 inactive_y 90.0 size 1.30 0.80 space_between 23.0 inactive_RGB 0 0 0
0AB1: @EditRadioStation 9 fontstyle 3 border 2291216 border_id 5 rgba 1@ unknown_id 0 unknown_rgba 1@ size 0.80 1.34 unknown_float 10000.0
0AB1: @EditVehicleText 8 size 1.20 1.15 fontstyle 1 border_id 1 classic_flag true vehicle_zone_rgba 1@ color_id 4 pos_y 54.0
0AB1: @EditZoneText 9 unknown_float 10000.0 size 1.20 1.15 border_id 1 classic_flag true fontstyle 1 rgba 1@ vehicle_zone_rgba 1@ pos_y 95.5
0AB1: @GeneralSettings 2 flag_activate true var_addr 4@
0AB1: @EditRadar 4 position 27.0 121.0 size 90.0 72.0
0AB1: @EditStyledText1 12 classic_flag true rgba 1@ size 1.8 1.8 fontstyle 3 border 255 color 0 position 0.0 472.0 ymult 17.49999817 0.0 0.0
0AB1: @EditStyledText2 8 classic_flag true rgba 1@ size 0.87 1.38 fontstyle 3 border 1 xy_pos 22.0 95.0
0AB1: @EditStyledText3 10 classic_flag true rgba 1@ size 2.0 2.0 fontstyle 3 border 3 color 4 xy_pos 1225.0 919.4285889 ymult -178.2500195
0AB1: @EditStyledText4 8 classic_flag true rgba 1@ size 1.20 1.45 fontstyle 1 border 255 color 1 pos_y 141.0
0AB1: @EditStyledText5 8 classic_flag true rgba 1@ size 1.20 1.45 fontstyle 1 border 1 color 8 pos_y 193.0
0AB1: @EditStyledText6 8 classic_flag true rgba 1@ size 1.0 1.17 fontstyle 1 border 0 color 2 pos_y 204.5
0AB1: @EditStyledText7 8 classic_flag true rgba 1@ size 0.0 0.0 fontstyle 1 border 0 color 0 pos_y 0.0
0AB1: @EditGarageMessages 9 classic_flag true rgba 1@ size 0.54 0.66 fontstyle 1 border 255 color 1 pos_y 140.1 linewidth_factor 230.0
0AB1: @EditMissionTimers 17 classic_flag true rgba 1@ size 0.8 1.3 fontstyle 3 border 1 timer_y 111.0 status_text_y 22.0 timer_x 28.0 timer_x_offset 124.0 stext_x 28.0 stext_x_offset 57.0 stext_space_between 15.0 bar_pos 26.0 7.0 bar_size 50.0 11.0
0AB1: @ChangeRedStuffColor 3 red 16 green 84 blue 192
0AB1: @InitializeHealthArmourOxygen 12 health_pos 459.7 66.0 text 484.5 66.0 armour_pos 392.0 66.0 text 411.0 66.0 oxygen_pos 389.0 66.0 drawn_text_size 0.8 2.6
0AB1: @InitializeMainHudColours 9 health 186 101 50 armour 124 140 95 oxygen 142 187 204
{
// VC
0AC6: 1@ = label @ViceCityBaseColours offset 
0AB1: @EditBaseColours 6 0xFF492B71 0xFF6AA05F 0xFFF3A780 0xFF02ACDC 0xFFFC6EA8 0xFF6AC4D2
0AB1: @EditMoney 10 unknown 22.5 235 pos_xy 112.0 43.5 size 0.70 1.20 classic_flag true border_ids 1 1 rgba 1@
0AB1: @EditClock 7 pos_xy 112.0 22.0 size 0.71 1.20 border 1616378 1 rgba 1@
0AB1: @EditWeapon 10 box_xy -12.5 27.5 box_size 63.5 63.5 ammo_xy -12.0 47.0 ammo_size 0.48 0.82 ammo_border 0 ammo_color_id 3
0AB1: @EditWantedLevelStars 13 classic_flag true rgba_addr 1@ unknown_float 65.0 active_color_id 4 position 106.30 87.0 inactive_y 90.0 size 1.30 0.80 space_between 23.0 inactive_RGB 0x1B 0x59 0x82
0AB1: @EditRadioStation 9 fontstyle 1 border 2291216 border_id 5 rgba 1@ unknown_id 0 unknown_rgba 1@ size 0.80 1.34 unknown_float 10000.0
0AB1: @EditVehicleText 8 size 1.75 1.95 fontstyle 0 border_id 1 classic_flag true vehicle_zone_rgba 1@ color_id 4 pos_y 101.0
0AB1: @EditZoneText 9 unknown_float 10000.0 size 1.72 1.89 border_id 1 classic_flag true fontstyle 0 rgba 1@ vehicle_zone_rgba 1@ pos_y 8.5
0AB1: @GeneralSettings 2 flag_activate true var_addr 4@
0AB1: @EditRadar 4 position 22.0 114.0 size 90.0 72.0
0AB1: @EditStyledText1 12 classic_flag true rgba 1@ size 1.87 1.87 fontstyle 3 border 255 color 7 position 0.0 469.0 ymult 18.81249818 0.0 0.0
0AB1: @EditStyledText2 8 classic_flag true rgba 1@ size 1.56 1.68 fontstyle 0 border 1 xy_pos 23.5 109.0
0AB1: @EditStyledText3 10 classic_flag true rgba 1@ size 2.08 2.0 fontstyle 3 border 1 color 1 xy_pos 1225.0 900.0 ymult -169.75003874
0AB1: @EditStyledText4 8 classic_flag true rgba 1@ size 1.61 1.45 fontstyle 1 border 255 color 4 pos_y 134.0
0AB1: @EditStyledText5 8 classic_flag true rgba 1@ size 1.61 1.45 fontstyle 1 border 1 color 8 pos_y 166.0
0AB1: @EditStyledText6 8 classic_flag true rgba 1@ size 1.34 1.17 fontstyle 1 border 0 color 4 pos_y 216.5
0AB1: @EditStyledText7 8 classic_flag true rgba 1@ size 0.0 0.0 fontstyle 1 border 0 color 0 pos_y 0.0
0AB1: @EditGarageMessages 9 classic_flag true rgba 1@ size 1.28 1.50 fontstyle 1 border 1 color 2 pos_y 140.1 linewidth_factor 80.0
0AB1: @EditMissionTimers 17 classic_flag true rgba 1@ size 0.74 1.20 fontstyle 3 border 1 timer_y 110.0 status_text_y 22.0 timer_x 39.0 timer_x_offset 90.0 stext_x 39.0 stext_x_offset 61.0 stext_space_between 11.0 bar_pos 35.0 8.0 bar_size 51.0 11.0
0AB1: @ChangeRedStuffColor 3 red 16 green 84 blue 192
0AB1: @InitializeHealthArmourOxygen 12 health_pos 462.0 65.0 text 487.0 65.0 armour_pos 392.0 65.0 text 415.0 65.0 oxygen_pos 396.0 65.0 drawn_text_size 0.7 2.4
0AB1: @InitializeMainHudColours 9 health 244 144 215 armour 0xB9 0xB9 0xB9 oxygen 142 187 204
}
0ADF: add_dynamic_GXT_entry "III_HIC" text "?" 
0ADF: add_dynamic_GXT_entry "III_AIC" text "<" 

repeat
wait 0
    if gosub @IsHudEnabled
    then gosub @ClassicHudLoop
    end
until false

{======================================================================
======================================================================}
:WriteInPointer // param_label 0@ param_value 1@ mem_address 2@
0AC6: 10@ = label 0@ offset 
0A8C: write_memory 10@ size 4 value 1@ virtual_protect 0
0A8C: write_memory 2@ size 4 value 10@ virtual_protect 1
0AB2: ret 0

:WriteParameter // mem_address 0@ param_size 1@ param_value 2@
0A8C: write_memory 0@ size 1@ value 2@ virtual_protect 1
0AB2: ret 0

{======================================================================
======================================================================}
:EditBaseColours
0A8C: write_memory 0xBAB22C size 4 value 0@ virtual_protect 0  //      0         0      Health Bar, Red Stuff
0A8C: write_memory 0xBAB230 size 4 value 1@ virtual_protect 0  //      4         1      Cash/Money, Entered Car Name Text, Green Stuff
0A8C: write_memory 0xBAB234 size 4 value 2@ virtual_protect 0  //      8         2      Blue Stuff
0A8C: write_memory 0xBAB244 size 4 value 3@ virtual_protect 0  //      24        6      Map Lines (Brown/Yellow)
0A8C: write_memory 0xBAB248 size 4 value 4@ virtual_protect 0  //      28        7      Pink, Purple Stuff
0A8C: write_memory 0xBAB258 size 4 value 5@ virtual_protect 0  //      44        11     Yellow Stuff
0AB2: ret 0


:EditClock // pos_xy 0@ 1@ size 2@ 3@ border 4@ 5@ rgba 6@
0AB1: @WriteInPointer 3 param_label @Clock_PosX param_value 0@ mem_address _ClockPosX
0AB1: @WriteInPointer 3 param_label @Clock_PosY param_value 1@ mem_address _ClockPosY
0AB1: @WriteInPointer 3 param_label @Clock_Width param_value 2@ mem_address _ClockWidth
0AB1: @WriteInPointer 3 param_label @Clock_Height param_value 3@ mem_address _ClockHeight
0AB1: @WriteParameter 3 mem_address _ClockBorderInt param_size 4 param_value 4@
0AB1: @WriteParameter 3 mem_address _ClockBorderByte1 param_size 1 param_value 5@
0AB1: @WriteParameter 3 mem_address _ClockColor param_size 4 param_value 6@
0AB2: ret 0


:EditMoney // unknown 0@ 1@ pos_xy 2@ 3@ size 4@ 5@ classic_flag 6@ border_ids 7@ 8@ rgba 9@
0AB1: @WriteInPointer 3 param_label @Money_Unknown param_value 0@ mem_address 0x58EC04
if 6@ == true
then 0A8C: write_memory 0x588B89 size 1 value 0xEB virtual_protect 1 //                      7A 1F:              jp      00588BAA                    EB 1F:          jmp 00588BAA
else 0A8C: write_memory 0x588B89 size 1 value 0x7A virtual_protect 1
end
0AB1: @WriteParameter 3 mem_address 0x588B89 param_size 1 param_value 1@
0AB1: @WriteInPointer 3 param_label @Money_PosX param_value 2@ mem_address _MoneyPosX
0AB1: @WriteInPointer 3 param_label @Money_PosY param_value 3@ mem_address _MoneyPosY
0AB1: @WriteInPointer 3 param_label @Money_Width param_value 4@ mem_address _MoneyWidth
0AB1: @WriteInPointer 3 param_label @Money_Height param_value 5@ mem_address _MoneyHeight
if 6@ == true
then 0A8C: write_memory _MoneyBorderInt size 4 value 0x00189F5D virtual_protect 1
else 0A8C: write_memory _MoneyBorderInt size 4 value 0x00189FFD virtual_protect 1
end
0AB1: @WriteParameter 3 mem_address _MoneyBorderByte1 param_size 1 param_value 7@
0AB1: @WriteParameter 3 mem_address _MoneyBorderByte2 param_size 1 param_value 8@
0AB1: @WriteParameter 3 mem_address _MoneyColor param_size 4 param_value 9@
0AB2: ret 0


:EditWeapon // box_xy 0@ 1@ box_size 2@ 3@ ammo_xy 4@ 5@ ammo_size 6@ 7@ ammo_border 8@ ammo_color_id 9@
0AB1: @WriteInPointer 3 param_label @WeaponBox_PosX param_value 0@ mem_address _WeaponBoxPosX
0AB1: @WriteInPointer 3 param_label @WeaponBox_PosY param_value 1@ mem_address _WeaponBoxPosY
0AB1: @WriteInPointer 3 param_label @WeaponBox_Width param_value 2@ mem_address _WeaponBoxWidth
0AB1: @WriteInPointer 3 param_label @WeaponBox_Height param_value 3@ mem_address _WeaponBoxHeight
0AB1: @WriteInPointer 3 param_label @WeaponBox_Width param_value 2@ mem_address 0x58D8CB
0AB1: @WriteInPointer 3 param_label @WeaponBox_Height param_value 3@ mem_address 0x58D896

0AB1: @WriteInPointer 3 param_label @WeaponAmmo_PosX param_value 4@ mem_address _WeaponAmmoPosX
0AB1: @WriteInPointer 3 param_label @WeaponAmmo_PosY param_value 5@ mem_address _WeaponAmmoPosY
0AB1: @WriteInPointer 3 param_label @WeaponAmmo_Width param_value 6@ mem_address _WeaponAmmoWidth
0AB1: @WriteInPointer 3 param_label @WeaponAmmo_Height param_value 7@ mem_address _WeaponAmmoHeight
0AB1: @WriteParameter 3 mem_address _WeaponAmmoBorder param_size 1 param_value 8@
0AB1: @WriteParameter 3 mem_address _WeaponAmmoColor2 param_size 1 param_value 9@
0AB2: ret 0



:EditWantedLevelStars // classic_flag 0@ rgba_addr 1@ unknown_float 2@ active_color_id 3@ position 4@ 5@ inactive_y 6@ size 7@ 8@ space_between 9@ inactive_RGB 10@ 11@ 12@
0AB1: @WriteInPointer 3 param_label @Wanted_Unknown param_value 2@ mem_address _WantedUnknown
if 0@ == true
then
    0A8C: write_memory _ShowInactiveWantedStars size 2 value 0x9090 virtual_protect 1 // Show Inactive Stars Always
    0A8C: write_memory _WantedBorder1 size 4 value 0x0018B829 virtual_protect 1 // Remove black thin border to Active wanted stars      E8 49B81800:    call    00719590            overwriting address (29B81800)
    0A8C: write_memory _ActiveWantedStarsPosYId size 1 value 0xEB virtual_protect 1 // Active wanted stars, position Y                  7A 22:          jp      0058DE47            changing to EB 1F: jmp 0058DE47
else
    0A8C: write_memory _ShowInactiveWantedStars size 2 value 0x097E virtual_protect 1 // Hide Inactive
    0A8C: write_memory _WantedBorder1 size 4 value 0x0018B849 virtual_protect 1
    0A8C: write_memory _ActiveWantedStarsPosYId size 1 value 0x7A virtual_protect 1
end
0AB1: @WriteParameter 3 mem_address _ActiveWantedStarsColorId param_size 1 param_value 3@
0AB1: @WriteParameter 3 mem_address _ActiveWantedStarsColor param_size 4 param_value 1@

// Flashing Stars Color
if 0@ == true
then
    0A8E: 20@ = 1@ + 18 // int 
    0A8C: write_memory 0x58DE77 size 4 value 20@ virtual_protect 1 //   0FB6 05 46B2BA00:   movzx   eax,byte ptr [00BAB246]     overwriting address
    20@ -= 1 
    0A8C: write_memory 0x58DE92 size 4 value 20@ virtual_protect 1 //   0FB6 0D 45B2BA00:   movzx   ecx,byte ptr [00BAB245]     overwriting address
    20@ -= 1 
    0A8C: write_memory 0x58DEAD size 4 value 20@ virtual_protect 1 //   0FB6 15 44B2BA00:   movzx   edx,byte ptr [00BAB244]     overwriting address
else
    0A8C: write_memory 0x58DE77 size 4 value 0xBAB246 virtual_protect 1
    0A8C: write_memory 0x58DE92 size 4 value 0xBAB245 virtual_protect 1
    0A8C: write_memory 0x58DEAD size 4 value 0xBAB244 virtual_protect 1
end

if 0@ == true
then
    0AB1: @WriteParameter 3 mem_address _WantedUnknownProp1 param_size 6 param_value 0x90
    0AB1: @WriteParameter 3 mem_address _WantedUnknownProp2 param_size 6 param_value 0x90
    0AB1: @WriteParameter 3 mem_address _WantedUnknownProp3 param_size 6 param_value 0x90
    0AB1: @WriteParameter 3 mem_address _InactiveWantedAlphaProp4 param_size 6 param_value 0x90
    0AB1: @WriteParameter 3 mem_address _InactiveWantedHeightProp5 param_size 6 param_value 0x90
    0AB1: @WriteParameter 3 mem_address _InactiveWantedWidthProp6 param_size 6 param_value 0x90
else
    20@ = _WantedUnknownProp1
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858C98
    
    20@ = _WantedUnknownProp2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858C98
    
    20@ = _WantedUnknownProp3
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858C98
    
    20@ = _InactiveWantedAlphaProp4
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858CB0
    
    20@ = _InactiveWantedHeightProp5
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858F08
    
    20@ = _InactiveWantedWidthProp6
    0AB1: @WriteParameter 3 mem_address 20@ param_size 2 param_value 0x0DD8
    20@ += 2
    0AB1: @WriteParameter 3 mem_address 20@ param_size 4 param_value 0x00858F08
end
0AB1: @WriteInPointer 3 param_label @Wanted_ActiveAndInactive_PosX param_value 4@ mem_address _WantedStarsActiveAndInactivePosX
0AB1: @WriteInPointer 3 param_label @Wanted_Inactive_PosY param_value 6@ mem_address _WantedStarsInactivePosY
0AB1: @WriteInPointer 3 param_label @Wanted_Active_PosY param_value 5@ mem_address _WantedStarsActivePosY
0AB1: @WriteInPointer 3 param_label @Wanted_Active_PosY_2 param_value 5@ mem_address _WantedStarsActivePosYRelated

0AB1: @WriteInPointer 3 param_label @Wanted_Height2 param_value 7@ mem_address _WantedStarsHeightRelated
0AB1: @WriteInPointer 3 param_label @Wanted_ActiveHeight param_value 7@ mem_address _ActiveWantedStarsHeight
0AB1: @WriteInPointer 3 param_label @Wanted_InactiveHeight param_value 7@ mem_address _InactiveWantedStarsHeight

0AB1: @WriteInPointer 3 param_label @Wanted_Width2 param_value 8@ mem_address _WantedStarsWidthRelated
0AB1: @WriteInPointer 3 param_label @Wanted_ActiveWidth param_value 8@ mem_address _ActiveWantedStarsWidth
0AB1: @WriteInPointer 3 param_label @Wanted_InactiveWidth param_value 8@ mem_address _InactiveWantedStarsWidth

0AB1: @WriteInPointer 3 param_label @Wanted_SpaceBetween param_value 9@ mem_address _SpaceBetweenStars

0A8C: write_memory 0x58DF3D size 1 value 12@ virtual_protect 0
0A8C: write_memory 0x58DF3F size 1 value 11@ virtual_protect 0
0A8C: write_memory 0x58DF41 size 1 value 10@ virtual_protect 0
0AB2: ret 0


:EditRadioStation // fontstyle 0@ border 1@ border_id 2@ rgba 3@ unknown_id 4@ unknown_rgba 5@ size 6@ 7@ unknown_float 8@
0AB1: @WriteParameter 3 mem_address _RadioStationFontstyle param_size 1 param_value 0@
0AB1: @WriteParameter 3 mem_address _RadioStationBorder param_size 4 param_value 1@
0AB1: @WriteParameter 3 mem_address _RadioStationBorderId param_size 1 param_value 2@
0AB1: @WriteParameter 3 mem_address _RadioStationRGBA1 param_size 4 param_value 3@
0AB1: @WriteParameter 3 mem_address _RadioStationUnknownId param_size 1 param_value 4@
0AB1: @WriteParameter 3 mem_address _RadioStationRGBA2 param_size 4 param_value 5@
0AB1: @WriteInPointer 3 param_label @RadioStation_Width param_value 6@ mem_address _RadioStationWidth
0AB1: @WriteInPointer 3 param_label @RadioStation_Height param_value 7@ mem_address _RadioStationHeight
0AB1: @WriteInPointer 3 param_label @RadioStation_Unknown param_value 8@ mem_address _RadioStationUnknown
0AB2: ret 0



:EditVehicleText // size 0@ 1@ fontstyle 2@ border_id 3@ classic_flag 4@ vehicle_zone_rgba 5@ color_id 6@ pos_y 7@
0AC6: 20@ = label @Vehicle_Height offset 
0A8C: write_memory 20@ size 4 value 1@ virtual_protect 0
0A8C: write_memory 0x58B091 size 4 value 20@ virtual_protect 1 // Vehicle Height

if 4@ == true
then
    0AC6: 20@ = label @Noname_6461 offset
    20@ += 2
    0AC6: 30@ = label @Vehicle_Width offset
    0A8C: write_memory 30@ size 4 value 0@ virtual_protect 0
    0A8C: write_memory 20@ size 4 value 30@ virtual_protect 0 // Modifying pointer in "Noname_6461" to address "Vehicle_Width"
    0AC6: 20@ = label @Noname_6461 offset 
    20@ -= 0x58B0AA 
    0A8C: write_memory 0x58B0A5 size 1 value 0xE9 virtual_protect 1 // Vehicle Width (related)
    0A8C: write_memory 0x58B0A6 size 4 value 20@ virtual_protect 1 // Vehicle Width
else
    0A8C: write_memory 0x58B0A5 size 1 value 0xD9 virtual_protect 1
    0A8C: write_memory 0x58B0A6 size 4 value 0xF3E8241C virtual_protect 1
end
0A8C: write_memory 0x58B0BB size 1 value 2@ virtual_protect 1 // Vehicle Fontstyle
0A8C: write_memory 0x58B0C2 size 1 value 3@ virtual_protect 1 // Vehicle Border
if 4@ == true
then 0A8C: write_memory 0x58B0C4 size 4 value 0x0018E4A8 virtual_protect 1 // Vehicle Border
else 0A8C: write_memory 0x58B0C4 size 4 value 0x0018E4C8 virtual_protect 1 // Vehicle Border
end
0A8C: write_memory 0x58B0DD size 4 value 5@ virtual_protect 1 // Vehicle and Zone Colour
0A8C: write_memory 0x58B0E3 size 1 value 6@ virtual_protect 1 // Vehicle Colour
0AC6: 20@ = label @Vehicle_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58B135 size 4 value 20@ virtual_protect 1 // Vehicle Pos Y

// This makes crash game when you activate Odd Jobs (from cars) and vehicle name is still displayed!
{0AC6: 20@ = label @Vehicle_Unknown offset 
0A8C: write_memory 20@ size 4 value 0 virtual_protect 0
0A8C: write_memory 0x58AEB0 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AECA size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AEF0 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AF0B size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AF91 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AFBC size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58AFE9 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58B02A size 4 value 20@ virtual_protect 1}
0AB2: ret 0




:EditZoneText // unknown_float 0@ size 1@ 2@ border_id 3@ classic_flag 4@ fontstyle 5@ rgba 6@ vehicle_zone_rgba 7@ pos_y 8@
0AC6: 20@ = label @Zone_Unknown offset 
0A8C: write_memory 20@ size 4 value 0@ virtual_protect 0
0A8C: write_memory 0x58AC95 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @Zone_Height offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58AD2C size 4 value 20@ virtual_protect 1 // Zone Height
0AC6: 20@ = label @Zone_Width offset 
0A8C: write_memory 20@ size 4 value 1@ virtual_protect 0
0A8C: write_memory 0x58AD42 size 4 value 20@ virtual_protect 1 // Zone Width
0A8C: write_memory 0x58AD4F size 1 value 3@ virtual_protect 1 // Zone Border

if 4@ == true
then
    0A8C: write_memory 0x58AD51 size 4 value 0x0018E81B virtual_protect 1 // Zone Border
    0A8C: write_memory 0x58AD74 size 5 value 0x90 virtual_protect 1
else
    0A8C: write_memory 0x58AD51 size 4 value 0x0018E83B virtual_protect 1
    0A8C: write_memory 0x58AD74 size 1 value 0xE8 virtual_protect 1 
    0A8C: write_memory 0x58AD75 size 4 value 0x0018E777 virtual_protect 1 
end

0AC6: 20@ = label @Noname_6480 offset
20@ += 6
0A8C: write_memory 20@ size 1 value 5@ virtual_protect 1

0AC6: 20@ = label @Noname_6480 offset
20@ -= 0x58AD9E
0A8C: write_memory 0x58AD99 size 1 value 0xE9 virtual_protect 1
0A8C: write_memory 0x58AD9A size 4 value 20@ virtual_protect 1 // Zone Fontstyle     // it is very probable that 6A 01: push 01 inside @Noname_6480 is the value of fontstyle... so, what is the original?

0A8C: write_memory 0x58ADF6 size 4 value 6@ virtual_protect 1 // Zone Color
0A8C: write_memory 0x58B0DD size 4 value 7@ virtual_protect 1 // Vehicle and Zone Colour

0AC6: 20@ = label @Zone_PosY offset
0A8C: write_memory 20@ size 4 value 8@ virtual_protect 0
0A8C: write_memory 0x58AE3A size 4 value 20@ virtual_protect 1 // Zone Pos Y
{
// CFont::SetSlantRefPoint
0AC6: 20@ = label @HUD_AREA_POS_X offset
0AC6: 30@ = label @_CFont__SetSlantRefPoint_3 offset
30@ += 4
0A8C: write_memory 20@ size 4 value 50.0 virtual_protect 0
0A8C: write_memory 30@ size 4 value 20@ virtual_protect 0

0AC6: 20@ = label @HUD_AREA_POS_Y offset
0AC6: 30@ = label @_CFont__SetSlantRefPoint_1 offset
30@ += 4
0A8C: write_memory 20@ size 4 value 250.0 virtual_protect 0
0A8C: write_memory 30@ size 4 value 20@ virtual_protect 0

0AC6: 20@ = label @HUD_AREA_SLANT offset
0AC6: 30@ = label @_CFont__SetSlant offset
30@ += 4
0A8C: write_memory 20@ size 4 value 0.14 virtual_protect 0
0A8C: write_memory 30@ size 4 value 20@ virtual_protect 0

0AC6: 20@ = label @_CFont__SetSlantRefPoint offset
20@ -= 0x58AE62
0A8C: write_memory 0x58AE5D size 1 value 0xE9 virtual_protect 1 // change "call" by "jmp"
0A8C: write_memory 0x58AE5E size 4 value 20@ virtual_protect 1
}
0AB2: ret 0



:GeneralSettings // flag_activate 0@ var_addr 1@
{if 0@ == true
then
    0A8C: write_memory 0x58CC6A size 5 value 0x90 virtual_protect 1 // Hide Original Styled Text 3 (Wasted or busted text)
    0A8C: write_memory 0x53E500 size 4 value 333269 virtual_protect 1
else
    0A8C: write_memory 0x58CC6A size 1 value 0xE8 virtual_protect 1 // Show Original Styled Text 3 (Wasted or busted text)
    0A8C: write_memory 0x58CC6B size 4 value 0x18DBB1 virtual_protect 1 // Show Original Styled Text 3 (Wasted or busted text)
    0A8C: write_memory 0x53E500 size 4 value 333276 virtual_protect 1
end}
if 0@ == true
then
    0AC6: 2@ = label @Noname_6526 offset
    2@ -= 0x58EE9F
    0A8C: write_memory 0x58EE9B size 4 value 2@ virtual_protect 1 // Hide health bar
    0A8C: write_memory 0x58EF6B size 5 value 0x90 virtual_protect 1 // Hide armour bar
    0A8C: write_memory 0x58F131 size 5 value 0x90 virtual_protect 1 // Hide breath meter
    
    // writing in a sector that originally has 90 90 90 90 90 90, something like this:  mov     byte ptr [4@ dir],00
    // Remember, 1@ is a pointer to 31@, so maybe we are updating 31@ value in order to use it in a loop later
    0A8C: write_memory 0x58FAD9 size 2 value 0x05C6 virtual_protect 1 
    0A8C: write_memory 0x58FADB size 4 value 1@ virtual_protect 1 
    0A8C: write_memory 0x58FADF size 1 value 0x00 virtual_protect 1
else
    0A8C: write_memory 0x58EE9B size 4 value 0xFFFFA3D1 virtual_protect 1 // Show health bar
    2@ = 0x58EF6B
    0A8C: write_memory 2@ size 1 value 0xE8 virtual_protect 1 // Show armour bar
    2@ += 1
    0A8C: write_memory 2@ size 4 value 0xFFFFA130 virtual_protect 1 // Show armour bar
    
    2@ = 0x58F131
    0A8C: write_memory 2@ size 1 value 0xE8 virtual_protect 1 // Show breath meter
    2@ += 1
    0A8C: write_memory 2@ size 4 value 0xFFFFA85A virtual_protect 1 // Show armour bar
    
    0A8C: write_memory 0x58FAD9 size 2 value 0x9090 virtual_protect 1 
    0A8C: write_memory 0x58FADB size 4 value 0x90909090 virtual_protect 1 
    0A8C: write_memory 0x58FADF size 1 value 0x90 virtual_protect 1
end
if 0@ == true
then
    // Sector:     CHud::DrawSubtitles(void)
    0A8C: write_memory 0x58C2BC size 5 value 0x90 virtual_protect 1 //              Erasing instruction:    call    dummy_7195E0    ; *(u32 *)(_C71A84) = _a0; // color?
    0A8C: write_memory 0x58C306 size 1 value 1 virtual_protect 1 // Messages Border Id      6A 02:          push    02                      overwriting value
else
    0A8C: write_memory 0x58C2BC size 1 value 0xE8 virtual_protect 1
    0A8C: write_memory 0x58C2BD size 4 value 0x0018D31F virtual_protect 1
    0A8C: write_memory 0x58C306 size 1 value 2 virtual_protect 1
end
0AB2: ret 0




:EditRadar // position 0@ 1@ size 2@ 3@
0AC6: 20@ = label @Radar_Height offset // Radar height
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x5834F6 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A47D size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A632 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A6AB size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A70E size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A801 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A8AB size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A921 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A9D5 size 4 value 20@ virtual_protect 1 

0AC6: 20@ = label @Radar_Width offset // Radar width
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x5834C2 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A449 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A7E9 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A840 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A943 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A99D size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @Radar_PosY offset // Radar Y-position
0A8C: write_memory 20@ size 4 value 1@ virtual_protect 0
0A8C: write_memory 0x583500 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A1A7 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A2D6 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A499 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A60E size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A71E size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A7C7 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A868 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A913 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A9C7 size 4 value 20@ virtual_protect 1 

0AC6: 20@ = label @Radar_PosX offset // Radar X-position
0A8C: write_memory 20@ size 4 value 0@ virtual_protect 0
0A8C: write_memory 0x5834D4 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A469 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A5E2 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A6E6 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A79B size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A836 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A8E9 size 4 value 20@ virtual_protect 1 
0A8C: write_memory 0x58A98A size 4 value 20@ virtual_protect 1 
0AB2: ret 0




:EditStyledText1 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ position 7@ 8@ ymult 9@ 10@ 11@
{ ypos : 489.1428528    when no other big message is displaying (and styled 1 has only 1 line)
                        or styled 1 has more than 1 line and wasted-busted message is displaying
  ypos : 546.2857056    when styled 4 (odd job) or styled 6 is displaying
  ypos : 454.8571472    when there's no wasted-busted message and styled 1 has more than 1 line
  
  ymult1 :      set ypos on default value
  ymult2 :      moves styled 1 down when styled 4 or 6 are present
  ymult3 :      moves styled 1 up when styled 3 is present and styled 1 has more than 1 line
}
0A8C: write_memory 0x58C853 size 1 value 0xD8 virtual_protect 1 // Convert qword in dword
0AC6: 20@ = label @Styled1_Height offset
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58C855 size 4 value 20@ virtual_protect 1 // Styled Text 1 Height           DC 0D 386C8600:    fmul    qword ptr [3FE66666]        Overwriting address

0A8C: write_memory 0x58C869 size 1 value 0xD8 virtual_protect 1 // Convert qword in dword
0AC6: 20@ = label @Styled1_Width offset
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58C86B size 4 value 20@ virtual_protect 1 // Styled Text 1 Width

0A8C: write_memory 0x58C8AA size 1 value 4@ virtual_protect 1 // Styled Text 1 Fontstyle
0A8C: write_memory 0x58C8B1 size 1 value 5@ virtual_protect 1 // Styled Text 1 Border Id
if 0@ == true
then 0A8C: write_memory 0x58C8B3 size 4 value 0x0018CCB9 virtual_protect 1 // Styled Text 1 Border
else 0A8C: write_memory 0x58C8B3 size 4 value 0x0018CCD9 virtual_protect 1 // Styled Text 1 Border
end
0A8C: write_memory 0x58C8F1 size 1 value 6@ virtual_protect 1 // Styled Text 1 Color Id
0A8C: write_memory 0x58C8F4 size 4 value 1@ virtual_protect 1 // Styled Text 1 Color
if 0@ == true
then 0A8C: write_memory 0x58FCCD size 2 value 0x9090 virtual_protect 1 //                       75 1D:              jne     0058FCEC                    Erasing instruction
else 0A8C: write_memory 0x58FCCD size 2 value 0x1D75 virtual_protect 1
end
{0AC6: 20@ = label @Styled1_PosY offset
0A8C: write_memory 20@ size 4 value 8@ virtual_protect 0 // Styled Text 1 Pos Y
0A8C: write_memory 0x58C6DC size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C7CF size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C800 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C837 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58CA13 size 4 value 20@ virtual_protect 1}

0AC6: 20@ = label @Styled1_YMult1 offset
0A8C: write_memory 20@ size 4 value 9@ virtual_protect 0
0A8C: write_memory 0x58C6D4 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C778 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C7BD size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C7F8 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58C825 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @Styled1_YMult2 offset
0A8C: write_memory 20@ size 4 value 10@ virtual_protect 0
0A8C: write_memory 0x58C82F size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @Styled1_YMult3 offset
0A8C: write_memory 20@ size 4 value 11@ virtual_protect 0
0A8C: write_memory 0x58C7C7 size 4 value 20@ virtual_protect 1
0AB2: ret 0
:Styled1_YMult1
hex
00 00 00 00
end
:Styled1_YMult2
hex
00 00 00 00
end
:Styled1_YMult3
hex
00 00 00 00
end



:EditStyledText2 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ xy_pos 6@ 7@
0AC6: 20@ = label @Styled2_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58D2CD size 4 value 20@ virtual_protect 1 // Styled Text 2 Height

if 0@ == true
then
    0AC6: 20@ = label @Noname_6492 offset
    20@ += 2
    0AC6: 30@ = label @Styled2_Width offset
    0A8C: write_memory 30@ size 4 value 2@ virtual_protect 0
    0A8C: write_memory 20@ size 4 value 30@ virtual_protect 0 // Modifying pointer in "Noname_6492" to address "Styled2_Width"
    0AC6: 20@ = label @Noname_6492 offset
    20@ -= 0x58D2E6 
    0A8C: write_memory 0x58D2E1 size 1 value 0xE9 virtual_protect 1 
    0A8C: write_memory 0x58D2E2 size 4 value 20@ virtual_protect 1 // Styled Text 2 Width
else
    0A8C: write_memory 0x58D2E1 size 1 value 0xD9 virtual_protect 1 
    0A8C: write_memory 0x58D2E2 size 4 value 0x97E8241C virtual_protect 1
end
0A8C: write_memory 0x58D2B6 size 1 value 4@ virtual_protect 1 // Styled Text 2 Fontstyle
0A8C: write_memory 0x58D3DA size 1 value 5@ virtual_protect 1 // Styled Text 2 Border Id
if 0@ == true
then 0A8C: write_memory 0x58D3DC size 4 value 0x0018C190 virtual_protect 1 // Styled Text 2 Border
else 0A8C: write_memory 0x58D3DC size 4 value 0x0018C1B0 virtual_protect 1
end

0AC6: 20@ = label @Styled2_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58D44F size 4 value 20@ virtual_protect 1 // Styled Text 2 Pos Y

0AC6: 20@ = label @Styled2_PosX offset 
0A8C: write_memory 20@ size 4 value 6@ virtual_protect 0
0A8C: write_memory 0x58D463 size 4 value 20@ virtual_protect 1 // Styled Text 2 Pos X
0AB2: ret 0






:EditStyledText3 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ xy_pos 7@ 8@ ymult 9@
0AC6: 20@ = label @Styled3_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58CBB3 size 4 value 20@ virtual_protect 1 // Styled Text 3 Height

0AC6: 20@ = label @Styled3_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58CBC9 size 4 value 20@ virtual_protect 1 // Styled Text 3 Width

0A8C: write_memory 0x58CBEB size 1 value 4@ virtual_protect 1 // Styled Text 3 Fontstyle
0A8C: write_memory 0x58CBF2 size 1 value 5@ virtual_protect 1 // Styled Text 3 Border Id
if 0@ == true
then 0A8C: write_memory 0x58CBF4 size 4 value 0x0018C978 virtual_protect 1 // CFont::SetDropShadowPosition
else 0A8C: write_memory 0x58CBF4 size 4 value 0x0018C998 virtual_protect 1 // CFont::SetOutlinePosition
end
if 0@ == true
then 0A8C: write_memory 0x58CBE4 size 1 value 2 virtual_protect 1 // Align Right
else 0A8C: write_memory 0x58CBE4 size 1 value 0 virtual_protect 1 // Align Center
end
0A8C: write_memory 0x58CC32 size 1 value 6@ virtual_protect 1 // Styled Text 3 Color Id
0A8C: write_memory 0x58CC35 size 4 value 1@ virtual_protect 1 // Styled Text 3 RGBA Base Colour address

{0AC6: 20@ = label @Styled3_PosY offset 
0A8C: write_memory 20@ size 4 value 8@ virtual_protect 0
0A8C: write_memory 0x58CA99 size 4 value 20@ virtual_protect 1 // Styled Text 3 PosY
0A8C: write_memory 0x58CB1C size 4 value 20@ virtual_protect 1 // Styled Text 3 PosY
0A8C: write_memory 0x58CB44 size 4 value 20@ virtual_protect 1 // Styled Text 3 PosY
0A8C: write_memory 0x58CC47 size 4 value 20@ virtual_protect 1 // Styled Text 3 PosY}

0AC6: 20@ = label @Styled3_PosYMult offset 
0A8C: write_memory 20@ size 4 value 9@ virtual_protect 0
0A8C: write_memory 0x58CA91 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58CB14 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58CB3C size 4 value 20@ virtual_protect 1

0013: 7@ *= 2.0
0092: 10@ = float 7@ to_integer

0AC6: 20@ = label @Styled3_MaxW offset 
0A8C: write_memory 20@ size 4 value 10@ virtual_protect 0
0A8C: write_memory 0x58CC55 size 4 value 20@ virtual_protect 1 // Max Width
0AB2: ret 0
:Styled3_MaxW
hex
00 00 00 00
end
:Styled3_PosYMult
hex
00 00 00 00
end





:EditStyledText4 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ pos_y 7@
0AC6: 20@ = label @Style4_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58CED4 size 4 value 20@ virtual_protect 1 // Styled Text 4 Height

0AC6: 20@ = label @Style4_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58CEEA size 4 value 20@ virtual_protect 1 // Styled Text 4 Width

0A8C: write_memory 0x58CF22 size 1 value 4@ virtual_protect 1 // Styled Text 4 Fontstyle
0A8C: write_memory 0x58CF29 size 1 value 5@ virtual_protect 1 // Styled Text 4 Border Id
if 0@ == true
then 0A8C: write_memory 0x58CF2B size 4 value 0x0018C641 virtual_protect 1 // Styled Text 4 Border
else 0A8C: write_memory 0x58CF2B size 4 value 0x0018C661 virtual_protect 1
end
0A8C: write_memory 0x58CF52 size 1 value 6@ virtual_protect 1 // Styled Text 4 Color Id
0A8C: write_memory 0x58CF59 size 4 value 1@ virtual_protect 1 // Styled Text 4 RGBA Addr

0AC6: 20@ = label @Style4_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58CF83 size 4 value 20@ virtual_protect 1 // Styled Text 4 Pos Y
0AB2: ret 0



:EditStyledText5 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ pos_y 7@
0AC6: 20@ = label @Styled5_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58CCCD size 4 value 20@ virtual_protect 1 // Styled Text 5 Height

0AC6: 20@ = label @Styled5_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58CCE3 size 4 value 20@ virtual_protect 1 // Styled Text 5 Width

if 0@ == true
then 0A8C: write_memory 0x58CD15 size 5 value 0x90 virtual_protect 1 // Avoid "call CFont__SetCentreSize" (removes linewidth limits)
else
    0A8C: write_memory 0x58CD15 size 1 value 0xE8 virtual_protect 1
    0A8C: write_memory 0x58CD16 size 4 value 0x0018C7C6 virtual_protect 1
end
0A8C: write_memory 0x58CD1B size 1 value 4@ virtual_protect 1 // Styled Text 5 Fontstyle
0A8C: write_memory 0x58CD22 size 1 value 5@ virtual_protect 1 // Styled Text 5 Border Id
if 0@ == true
then 0A8C: write_memory 0x58CD24 size 4 value 0x0018C848 virtual_protect 1 // Styled Text 5 Border
else 0A8C: write_memory 0x58CD24 size 4 value 0x0018C868 virtual_protect 1
end
0A8C: write_memory 0x58CD4B size 1 value 6@ virtual_protect 1 // Styled Text 5 Color Id
0A8C: write_memory 0x58CD52 size 4 value 1@ virtual_protect 1 // Styled Text 5 RGBA addr

0AC6: 20@ = label @Styled5_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58CD7C size 4 value 20@ virtual_protect 1 // Styled Text 5 Pos Y
0AB2: ret 0



:EditStyledText6 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ pos_y 7@
0AC6: 20@ = label @Styled6_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x58D14E size 4 value 20@ virtual_protect 1 // Styled Text 6 Height

0AC6: 20@ = label @Styled6_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58D164 size 4 value 20@ virtual_protect 1 // Styled Text 6 Width

0A8C: write_memory 0x58D19C size 1 value 4@ virtual_protect 1 // Styled Text 6 Fontstyle
if 0@ == true
then 0A8C: write_memory 0x58D1A5 size 4 value 0x0018C3C7 virtual_protect 1 // Styled Text 6 Border
else 0A8C: write_memory 0x58D1A5 size 4 value 0x0018C3E7 virtual_protect 1
end
0A8C: write_memory 0x58D1CC size 1 value 6@ virtual_protect 1 // Styled Text 6 Color Id
0A8C: write_memory 0x58D1D3 size 4 value 1@ virtual_protect 1 // Styled Text 6 RGBA Addr

0AC6: 20@ = label @Styled6_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58D1FD size 4 value 20@ virtual_protect 1 // Styled Text 6 Pos Y
0AB2: ret 0




:EditStyledText7 // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ pos_y 7@
0A8C: write_memory 0x58CE20 size 1 value 4@ virtual_protect 1 // Styled Text 7 Fontstyle
if 0@ == true
then 0A8C: write_memory 0x58CE29 size 4 value 0x0018C743 virtual_protect 1 // Styled Text 7 Border
else 0A8C: write_memory 0x58CE29 size 4 value 0x0018C763 virtual_protect 1
end
0AB2: ret 0




:EditGarageMessages // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ color 6@ pos_y 7@ linewidth_factor 8@
0AC6: 20@ = label @Garage_Height offset 
0A8C: write_memory 20@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 0x4477BF size 4 value 20@ virtual_protect 1 // Height

0AC6: 20@ = label @Garage_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x4477D5 size 4 value 20@ virtual_protect 1 // Width

0AC6: 20@ = label @Garage_PosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x4478B9 size 4 value 20@ virtual_protect 1 // Pos Y
0A8C: write_memory 0x447923 size 4 value 20@ virtual_protect 1 // Pos Y
0A8C: write_memory 0x447966 size 4 value 20@ virtual_protect 1 // Pos Y

0A8C: write_memory 0x44781C size 1 value 4@ virtual_protect 1 // Fontstyle
0A8C: write_memory 0x447826 size 1 value 6@ virtual_protect 1 // Color Id
0A8C: write_memory 0x44782D size 4 value 1@ virtual_protect 1 // RGBA addr
0A8C: write_memory 0x44783F size 1 value 5@ virtual_protect 1 // Border Id
if 0@ == true
then 0A8C: write_memory 0x447841 size 4 value 0x002D1D2B virtual_protect 1 // Border
else 0A8C: write_memory 0x447841 size 4 value 0x002D1D4B virtual_protect 1
end
0AC6: 20@ = label @Garage_LwidthFactor offset 
0A8C: write_memory 20@ size 4 value 8@ virtual_protect 0
0A8C: write_memory 0x447804 size 4 value 20@ virtual_protect 1 // Linewidth Factor      // Linewidth = RsGlobal.MaximumWidth - 0.0015625 * RsGlobal.MaximumWidth * LinewidthFactor
0AB2: ret 0





:EditMissionTimers // classic_flag 0@ rgba 1@ size 2@ 3@ fontstyle 4@ border 5@ timer_y 6@ status_text_y 7@ timer_x 8@ timer_x_offset 9@ stext_x 10@ stext_x_offset 11@ stext_space_between 12@ bar_pos 13@ 14@ bar_size 15@ 16@
0A8C: write_memory 0x58B295 size 1 value 4@ virtual_protect 1 // Fontstyle
0A8C: write_memory 0x58B2B9 size 1 value 5@ virtual_protect 1 // Border Id
if 0@ == true
then 0A8C: write_memory 0x58B2BB size 4 value 0x0018E2B1 virtual_protect 1 // CFont::SetDropShadowPosition
else 0A8C: write_memory 0x58B2BB size 4 value 0x002D1D4B virtual_protect 1 // CFont::SetOutlinePosition
end

0AC6: 20@ = label @MTimers_Width offset 
0A8C: write_memory 20@ size 4 value 2@ virtual_protect 0
0A8C: write_memory 0x58B27B size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @_AddMult_to_Height offset
20@ += 2
0AC6: 30@ = label @MTimers_Height offset
0A8C: write_memory 30@ size 4 value 3@ virtual_protect 0
0A8C: write_memory 20@ size 4 value 30@ virtual_protect 0 // Modifying pointer in "_AddMult_to_Height" to address "MTimers_Height"
0AC6: 20@ = label @_AddMult_to_Height offset
20@ -= 4
20@ -= 0x58B26A
0A8C: write_memory 0x58B269 size 1 value 0xE9 virtual_protect 1 // jump instruction
0A8C: write_memory 0x58B26A size 4 value 20@ virtual_protect 1 // @_AddMult_to_Height address

0AC6: 20@ = label @MTimers_TimerPosY offset 
0A8C: write_memory 20@ size 4 value 6@ virtual_protect 0
0A8C: write_memory 0x58B1CA size 4 value 20@ virtual_protect 1
0AC6: 20@ = label @MTimers_StatusTextPosY offset 
0A8C: write_memory 20@ size 4 value 7@ virtual_protect 0
0A8C: write_memory 0x58B1FA size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_TimerPosX offset 
0A8C: write_memory 20@ size 4 value 8@ virtual_protect 0
0A8C: write_memory 0x58B3C6 size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58B409 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_TimerPosXOffset offset 
0A8C: write_memory 20@ size 4 value 9@ virtual_protect 0
0A8C: write_memory 0x58B415 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_StatusTextPosX offset 
0A8C: write_memory 20@ size 4 value 10@ virtual_protect 0
0A8C: write_memory 0x58B68E size 4 value 20@ virtual_protect 1
0A8C: write_memory 0x58B581 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_StatusTextPosXOffset offset 
0A8C: write_memory 20@ size 4 value 11@ virtual_protect 0
0A8C: write_memory 0x58B69B size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_StatusTextSpaceBetween offset 
0A8C: write_memory 20@ size 4 value 12@ virtual_protect 0
0A8C: write_memory 0x58B541 size 4 value 20@ virtual_protect 1

if 0@ == true
then 0A8C: write_memory 0x58B5FC size 1 value 0 virtual_protect 1 // Bar Border (Bool)
else 0A8C: write_memory 0x58B5FC size 1 value 1 virtual_protect 1 // Bar Border (Bool)
end
0AC6: 20@ = label @MTimers_BarPosX offset 
0A8C: write_memory 20@ size 4 value 13@ virtual_protect 0
0A8C: write_memory 0x58B648 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_BarPosY offset 
0A8C: write_memory 20@ size 4 value 14@ virtual_protect 0
0A8C: write_memory 0x58B636 size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_BarWidth offset 
0A8C: write_memory 20@ size 4 value 15@ virtual_protect 0
0A8C: write_memory 0x58B5FF size 4 value 20@ virtual_protect 1

0AC6: 20@ = label @MTimers_BarHeight offset 
0A8C: write_memory 20@ size 4 value 16@ virtual_protect 0
0A8C: write_memory 0x58B621 size 4 value 20@ virtual_protect 1
0AB2: ret 0
:MTimers_TimerPosY
hex
00 00 00 00
end
:MTimers_StatusTextPosY
hex
00 00 00 00
end
:MTimers_Width
hex
00 00 00 00
end
:MTimers_Height
hex
00 00 00 00
end
:MTimers_TimerPosX
hex
00 00 00 00
end
:MTimers_TimerPosXOffset
hex
00 00 00 00
end
:MTimers_StatusTextPosX
hex
00 00 00 00
end
:MTimers_StatusTextPosXOffset
hex
00 00 00 00
end
:MTimers_StatusTextSpaceBetween
hex
00 00 00 00
end
:MTimers_BarPosX
hex
00 00 00 00
end
:MTimers_BarPosY
hex
00 00 00 00
end
:MTimers_BarWidth
hex
00 00 00 00
end
:MTimers_BarHeight
hex
00 00 00 00
end




:ChangeRedStuffColor // red 0@ green 1@ blue 2@
// Change created spheres color
0A8D: 20@ = read_memory 0x4810E0 size 1 virtual_protect 0
if 20@ == 0xE9
then
    0A8D: 20@ = read_memory 0x4810E1 size 4 virtual_protect 0
    20@ += 0x4810E5
else 20@ = 0x4810E0
end
20@ += 43
0A8C: write_memory 20@ size 1 value 2@ virtual_protect 1
20@ += 2
0A8C: write_memory 20@ size 1 value 1@ virtual_protect 1
20@ += 2
0A8C: write_memory 20@ size 1 value 0@ virtual_protect 1

// Unknown !!!
0A8C: write_memory 0x585CCB size 1 value 2@ virtual_protect 1
0A8C: write_memory 0x585CCD size 1 value 1@ virtual_protect 1
0A8C: write_memory 0x585CCF size 1 value 0@ virtual_protect 1

// Change inner sphere color
0A8C: write_memory 0x70CD0B size 1 value 2@ virtual_protect 1
0A8C: write_memory 0x70CD0D size 1 value 1@ virtual_protect 1
0A8C: write_memory 0x70CD0F size 1 value 0@ virtual_protect 1

// Change medium sphere color
0A8C: write_memory 0x70CD58 size 1 value 2@ virtual_protect 1
0A8C: write_memory 0x70CD5A size 1 value 1@ virtual_protect 1
0A8C: write_memory 0x70CD5C size 1 value 0@ virtual_protect 1

// Change outer sphere color
0A8C: write_memory 0x70CDAB size 1 value 2@ virtual_protect 1
0A8C: write_memory 0x70CDAD size 1 value 1@ virtual_protect 1
0A8C: write_memory 0x70CDAF size 1 value 0@ virtual_protect 1

// Change Racing Checkpoints color
0A8C: write_memory 0x493648 size 1 value 0@ virtual_protect 1
0AC6: 20@ = label @Noname_6511 offset
20@ += 4
0A8C: write_memory 20@ size 1 value 1@ virtual_protect 1
20@ += 5
0A8C: write_memory 20@ size 1 value 2@ virtual_protect 1
0AC6: 20@ = label @Noname_6511 offset
20@ -= 0x49364E 
0A8C: write_memory 0x493649 size 1 value 0xE9 virtual_protect 1 
0A8C: write_memory 0x49364A size 4 value 20@ virtual_protect 1
0AB2: ret 0




:InitializeHealthArmourOxygen // health_pos 0@ 1@ text 2@ 3@ armour_pos 4@ 5@ text 6@ 7@ oxygen_pos 8@ 9@ size 10@ 11@
0AC6: 15@ = label @Health_Pos offset
for 20@ = 0 to 3
    0A8C: write_memory 15@ size 4 value 0@(20@,4f) virtual_protect 0
    15@+=4
end
0AC6: 15@ = label @Armour_Pos offset
for 20@ = 0 to 3
    0A8C: write_memory 15@ size 4 value 4@(20@,4f) virtual_protect 0
    15@+=4
end
0AC6: 15@ = label @Oxygen_Pos offset
0A8C: write_memory 15@ size 4 value 8@ virtual_protect 0
15@+=4
0A8C: write_memory 15@ size 4 value 9@ virtual_protect 0

0AC6: 15@ = label @Hud_DrawnText_Size offset
0A8C: write_memory 15@ size 4 value 10@ virtual_protect 0
15@+=4
0A8C: write_memory 15@ size 4 value 11@ virtual_protect 0
0AB2: ret 0




:ReadPosition // label 0@
0AC6: 10@ = label 0@ offset
for 20@ = 0 to 3
    0A8D: 11@(20@,4f) = read_memory 10@ size 4 virtual_protect 0
    10@+=4
end
0AB2: ret 4 icon_pos 11@ 12@ text_pos 13@ 14@




:ReadSize // no parameters
0AC6: 10@ = label @Hud_DrawnText_Size offset
0A8D: 11@ = read_memory 10@ size 4 virtual_protect 0
10@+=4
0A8D: 12@ = read_memory 10@ size 4 virtual_protect 0
0AB2: ret 2 11@ 12@




:InitializeMainHudColours // health 0@ 1@ 2@ armour 3@ 4@ 5@ oxygen 6@ 7@ 8@
0AC6: 10@ = label @HealthColours offset
for 11@ = 0 to 2
    0A8C: write_memory 10@ size 1 value 0@(11@,3i) virtual_protect 0
    10@ += 1
end
0AC6: 10@ = label @ArmourColours offset
for 11@ = 0 to 2
    0A8C: write_memory 10@ size 1 value 3@(11@,3i) virtual_protect 0
    10@ += 1
end
0AC6: 10@ = label @OxygenColours offset
for 11@ = 0 to 2
    0A8C: write_memory 10@ size 1 value 6@(11@,3i) virtual_protect 0
    10@ += 1
end
0AB2: ret 0




:ReadRGB // label 0@
0AC6: 10@ = label 0@ offset
for 11@ = 0 to 2
    0A8D: 1@(11@,3i) = read_memory 10@ size 1 virtual_protect 0
    10@ += 1
end
0AB2: ret 3 1@ 2@ 3@

{======================================================================
======================================================================}
:Money_Unknown
hex
00 00 00 00
end
:Money_PosX
hex
00 00 00 00
end
:Money_PosY
hex
00 00 00 00
end
:Money_Width
hex
00 00 00 00
end
:Money_Height
hex
00 00 00 00
end
:Money_Border
hex
00 00 00 00
end
:Money_ShadowDistance
hex
00
end
:Money_Border1
hex
00
end

:Clock_PosX
hex
00 00 00 00
end
:Clock_PosY
hex
00 00 00 00
end
:Clock_Width
hex
00 00 00 00
end
:Clock_Height
hex
00 00 00 00
end
:Clock_Border
hex
00 00 00 00
end
:Clock_Border1
hex
00
end

:WeaponBox_PosX
hex
00 00 00 00
end
:WeaponBox_PosY
hex
00 00 00 00
end
:WeaponBox_Width
hex
00 00 00 00
end
:WeaponBox_Height
hex
00 00 00 00
end

:WeaponAmmo_PosX
hex
00 00 00 00
end
:WeaponAmmo_PosY
hex
00 00 00 00
end
:WeaponAmmo_Width
hex
00 00 00 00
end
:WeaponAmmo_Height
hex
00 00 00 00
end
:WeaponAmmo_Border
hex
00
end
:WeaponAmmo_Color2
hex
00
end

:Wanted_Unknown
hex
00 00 00 00
end
:Wanted_ActiveAndInactive_PosX
hex
00 00 00 00
end
:Wanted_Inactive_PosY
hex
00 00 00 00
end
:Wanted_Active_PosY
hex
00 00 00 00
end
:Wanted_Active_PosY_2
hex
00 00 00 00
end
:Wanted_Height2
hex
00 00 00 00
end
:Wanted_ActiveHeight
hex
00 00 00 00
end
:Wanted_InactiveHeight
hex
00 00 00 00
end
:Wanted_Width2
hex
00 00 00 00
end
:Wanted_ActiveWidth
hex
00 00 00 00
end
:Wanted_InactiveWidth
hex
00 00 00 00
end
:Wanted_SpaceBetween
hex
00 00 00 00
end

:RadioStation_Width
hex
00 00 00 00
end
:RadioStation_Height
hex
00 00 00 00
end
:RadioStation_Unknown
hex
00 00 00 00
end

:Vehicle_Width
hex
00 00 00 00
end
:Vehicle_Height
hex
00 00 00 00
end
:Vehicle_PosY
hex
00 00 00 00
end
:Vehicle_Unknown
hex
00 00 00 00
end

:Zone_Unknown
hex
00 00 00 00
end
:Zone_Width
hex
00 00 00 00
end
:Zone_Height
hex
00 00 00 00
end
:Zone_PosY
hex
00 00 00 00
end

:Radar_PosX
hex
00 00 00 00
end
:Radar_PosY
hex
00 00 00 00
end
:Radar_Width
hex
00 00 00 00
end
:Radar_Height
hex
00 00 00 00
end

:Styled1_Width
hex
00 00 00 00
end
:Styled1_Height
hex
00 00 00 00
end
:Styled1_PosY
hex
00 00 00 00
end
:Styled2_Width
hex
00 00 00 00
end
:Styled2_Height
hex
00 00 00 00
end
:Styled2_PosX
hex
00 00 00 00
end
:Styled2_PosY
hex
00 00 00 00
end
:Styled3_Width
hex
00 00 00 00
end
:Styled3_Height
hex
00 00 00 00
end
:Styled3_PosY
hex
00 00 00 00
end
:Style4_Width
hex
00 00 00 00
end
:Style4_Height
hex
00 00 00 00
end
:Style4_PosY
hex
00 00 00 00
end
:Styled5_Width
hex
00 00 00 00
end
:Styled5_Height
hex
00 00 00 00
end
:Styled5_PosY
hex
00 00 00 00
end
:Styled6_Width
hex
00 00 00 00
end
:Styled6_Height
hex
00 00 00 00
end
:Styled6_PosY
hex
00 00 00 00
end

:Garage_Width
hex
00 00 00 00
end
:Garage_Height
hex
00 00 00 00
end
:Garage_PosY
hex
00 00 00 00
end
:Garage_LwidthFactor
hex
00 00 00 00
end

:IIIBaseColours
hex
 66 85 8F FF 59 73 96 FF BA 65 32 FF 98 9A 52 FF
 C2 A5 78 FF 8E BB CC FF 00 00 00 FF
end

:ViceCityBaseColours
hex
 66 85 8F FF 00 CF 85 FF 1B 59 82 FF 2D 9B 5A FF
 61 C2 F7 FF 8E BB CC FF 00 00 00 FF
end
{hex
 66 85 8F FF 00 CF 85 FF BA 65 32 FF 2D 9B 5A FF
 61 C2 F7 FF 8E BB CC FF 00 00 00 FF
end}

:HealthColours
hex
00 00 00
end

:ArmourColours
hex
00 00 00
end

:OxygenColours
hex
00 00 00
end

:Health_Pos
hex
00 00 00 00     00 00 00 00     00 00 00 00     00 00 00 00
end
:Armour_Pos
hex
00 00 00 00     00 00 00 00     00 00 00 00     00 00 00 00
end
:Oxygen_Pos
hex
00 00 00 00     00 00 00 00     00 00 00 00     00 00 00 00
end
:Hud_DrawnText_Size
hex
00 00 00 00     00 00 00 00
end

{======================================================================
======================================================================}
:InitializeAssemblerRegion
0AC7: 4@ = var 31@ offset 
0AC6: 2@ = label @Noname_6461 offset 
2@ += 2 
0AC6: 3@ = label @Noname_6297 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 8 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 7443360 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5812397 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 7443728 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 7 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5811615 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 6 
0AC6: 3@ = label @Noname_6325 offset 
3@ += 36 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 8 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 0x719380 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5821161 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 15 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 4798033 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 6 
0A8C: write_memory 2@ size 4 value 4@ virtual_protect 0 
2@ += 63 
0AC6: 3@ = label @Noname_6413 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5827502 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 9 
0AC6: 3@ = label @Noname_6423 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5827502 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 11 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5827497 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 11 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 0x57708B - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 7 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5730443 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 14 
0AC6: 3@ = label @Noname_6433 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5742952 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 8 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5742437 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0AC6: 3@ = label @Noname_6447 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5742952 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 15 
0AC6: 3@ = label @Noname_6225 offset 
3@ += 4 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5827610 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 6 
0AC6: 3@ = label @Noname_6225 offset 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 
2@ += 5 
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 5827610 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0

// _AddMult_to_Height
0AC6: 2@ = label @_AddMult_to_Height offset
2@ += 17
0A8E: 3@ = 2@ + 4 // int 
0A8F: 3@ = 0x58B273 - 3@ // int 
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0 

// _CFont__SetSlantRefPoint
0AC6: 3@ = label @_Value_1080 offset
0A8C: write_memory 3@ size 4 value 1080.0 virtual_protect 0
0AC6: 2@ = label @_CFont__SetSlantRefPoint_2 offset
2@ += 4
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0
0AC6: 2@ = label @_CFont__SetSlantRefPoint_3 offset
2@ += 12
0A8C: write_memory 2@ size 4 value 3@ virtual_protect 0
return

{======================================================================
======================================================================}
:Noname_6213
851F:   not 
hex
 AB 3F CD CC 4C 3F 00 00 B4 41
end

:Noname_6225
hex
 00 00 DE 42 00 00 EE 42 00 00 DC 42
end

:Noname_6237
hex
 00 00 2E 42 00 00 DC 41 00 00 48 C1
end

:Noname_6249
hex
 00 00 7E 42
end

:Noname_6253
hex
 9A 99 19 3F
end

:Noname_6257
hex
 CD CC CC 3E
end

:Noname_6261
hex
 00 00 3A 42
end

:Noname_6265
hex
 00 00 82 42
end

:Noname_6269
hex
 00 00 AE 42
end

:Noname_6273
hex
 9A 99 B4 42
end

:Noname_6277
hex
 33 33 51 42
end

:Noname_6281
hex
 66 66 A6 3F
end

:Noname_6285
hex
 CD CC 4C 3F
end

:Noname_6289
hex
 00 00 B8 41
end

:Noname_6293
hex
 33 33 93 3F
end

:Noname_6297
hex
 9A 99 99 3F // This is float 1.200000048 (vehicle text width)
end

:Noname_6301
hex
 00 00 58 42
end

:Noname_6305
hex
 00 40 1C 46
end

:Noname_6309
hex
 00 00 BF 42
end

:Noname_6313
hex
 00 00 90 42
end

:Noname_6317
hex
 00 00 B4 42 00 00 F2 42
end

:Noname_6325
hex
 00 00 D8 41 00 00 27 43 9A 99 B9 3F 9A 99 99 3F 00 80 // 18
 4C 43 8F C2 95 3F 00 00 80 3F 00 00 00 00 C3 F5 // 16
 C8 3F B8 1E 85 3F 00 00 B6 42 66 66 E6 3F 33 33 // 16
 B3 3F 00 00 00 3F 00 00 1B 43 // 10
end

:Noname_6385
hex
 66 85 8F FF 59 73 96 FF BA 65 32 FF 98 9A 52 FF
 C2 A5 78 FF 8E BB CC FF 00 00 00 FF
end

:Noname_6413
hex
 25 64 3A 25 30 32 64 41 4D 00
end

:Noname_6423
hex
 25 64 3A 25 30 32 64 50 4D 00
end

:Noname_6433
hex
 4F 4E 2C 20 32 34 48 20 43 4C 4F 43 4B 00
end

:Noname_6447
hex
 4F 4E 2C 20 31 32 48 20 43 4C 4F 43 4B 00
end

:Noname_6461
hex
 D8 0D 00 00 00 00  //  fmul    dword ptr [addr]
 D9 1C 24           //  fstp    dword ptr [esp]
 E8 00 00 00 00     //  call    gta_sa.exe+3193A0(007193A0)  // sub_7193A0      proc near               ; CODE XREF: CMenu__DrawTextBoxWTitle
 E9 00 00 00 00     //  jmp     0058B0AD
end

:Noname_6480
hex
 E8 00 00 00 00     //  call    gta_sa.exe+319510(00719510)  // __setFontShadowRGBA proc near
 6A 01              //  push    01
 E9 00 00 00 00     //  jmp     gta_sa.exe+18AD9F(0058AD9F)
end

:Noname_6492
hex
 D8 0D 00 00 00 00  //  fmul    dword ptr [040AE8E5]
 D9 1C 24           //  fstp    dword ptr [esp]
 E8 00 00 00 00     //  call    gta_sa.exe+319380(00719380)  // int __cdecl StoreTextDrawLetterSize(float lWidth,float lHeight)
 E9 00 00 00 00     //  jmp     gta_sa.exe+18D2E9(0058D2E9)
end

:Noname_6511
hex
 C6 44 24 3C 54     //  mov     byte ptr [esp+3C],54
 C6 44 24 38 C0     //  mov     byte ptr [esp+38],-40
 E9 00 00 00 00     //  jmp     gta_sa.exe+93651(00493651)
end

:Noname_6526
hex
 C6 05 00 00 00 00 01   //  mov     byte ptr [04224AE8],01
 C3                     //  ret
end

:Noname_6534
hex
 80 3D 69 67 BA 00 02   //  cmp     byte ptr [00BA6769],02
 75 47                  //  jne     040AE9E2
 83 F9 00               //  cmp     ecx,00
 75 07                  //  jne     040AE9A7
 B9 0C 00 00 00         //  mov     ecx,0000000C
 EB 0A                  //  jmp     040AE9B1
 83 F9 0C               //  cmp     ecx,0C
 75 05                  //  jne     040AE9B1
 B9 18 00 00 00         //  mov     ecx,00000018
 83 F9 0C               //  cmp     ecx,0C
 7E 07                  //  jle     040AE9BD
 83 E9 0C               //  sub     ecx,0C
 B2 00                  //  mov     dl,00
 EB 02                  //  jmp     040AE9BF
 B2 01                  //  mov     dl,01
 50                     //  push    eax
 51                     //  push    ecx
 80 FA 01               //  cmp     dl,01
 75 0E                  //  jne     040AE9D4
 8D 54 24 1C            //  lea     edx,[esp+1C]
 68 00 00 00 00         //  push    040AE919                [%d:%02dAM]
 E9 00 00 00 00         //  jmp     0058EBAE
 8D 54 24 1C            //  lea     edx,[esp+1C]
 68 00 00 00 00         //  push    040AE923                [%d:%02dPM]
 E9 00 00 00 00         //  jmp     0058EBAE
 50                     //  push    eax
 51                     //  push    ecx
 8D 54 24 1C            //  lea     edx,[esp+1C]
 E9 00 00 00 00         //  jmp     0058EBA9
end

:Noname_6625
hex
 3C 02          //  cmp     al,02
 74 07          //  je      040AE9F8
 FE C0          //  inc     al
 E9 00 00 00 00 //  jmp     0057708B
 B0 00          //  mov     al,00
 E9 00 00 00 00 //  jmp     0057708B
end

:Noname_6643
hex
 B9 40 B3 C1 00     //  mov     ecx,00C1B340
 3C 01              //  cmp     al,01
 75 0A              //  jne     040AEA12
 BE 00 00 00 00     //  mov     esi,040AE92D            [ON, 24H CLOCK]
 E9 00 00 00 00     //  jmp     0057A168
 3C 02              //  cmp     al,02
 0F 85 00 00 00 00  //  jne     00579F65
 BE 00 00 00 00     //  mov     esi,040AE93B            [ON, 12H CLOCK]
 E9 00 00 00 00     //  jmp     0057A168
end

:Noname_6680
hex
 80 3D 69 67 BA 00 02   //  cmp     byte ptr [00BA6769],02
 75 0B                  //  jne     040AEA38
 D8 0D 00 00 00 00      //  fmul    dword ptr [040AE861]
 E9 00 00 00 00         //  jmp     0058EC1A
 D8 0D 00 00 00 00      //  fmul    dword ptr [040AE85D]
 E9 00 00 00 00         //  jmp     0058EC1A
end

:_AddMult_to_Height
hex
 D8 0D 00 00 00 00      //  fmul    dword ptr [address to MTimers_Height]
 D9 5C 24 04            //  fstp    [esp+104h+var_100]
 DB 05 44 70 C1 00      //  fild    RsGlobal.MaximumWidth
 E9 00 00 00 00         //  jmp     [0058B273]
 "_AddMult_to_Height"
end

:_CFont__SetSlantRefPoint // CFont::SetSlantRefPoint(RsGlobal.maximumWidth - SCREEN_COORD(HUD_AREA_POS_X), SCREEN_COORD_BOTTOM(HUD_AREA_POS_Y));
hex
 8B 35 4470C100             // mov          esi,[00C17044]          [00000500]      RsGlobal
 33 C0                      // xor          eax,eax
 8B 0D 4870C100             // mov          ecx,[00C17048]          [00000400]      RsGlobal
 3B F1                      // cmp          esi,ecx
end
:_CFont__SetSlantRefPoint_1
hex
 F3 0F10 05 2472015A        // movss        xmm0,[5A017224]         [250.00]        HUD_AREA_POS_Y = 250.0f;                    CHANGE THIS ADDR!!
 0F9F C0                    // setg         al
 33 D2                      // xor          edx,edx
 66 0F6E 0C 85 4470C100     // movd         xmm1,[eax*4+00C17044]
 8D 04 85 4470C100          // lea          eax,[eax*4+00C17044]
 0F5B C9                    // cvtdq2ps     xmm1,xmm1
 3B F1                      // cmp          esi,ecx
 0F9F C2                    // setg         dl
 83 C4 08                   // add          esp,08                  8
 8D 14 95 4470C100          // lea          edx,[edx*4+00C17044]
 66 0F6E D1                 // movd         xmm2,ecx
 F3 0F59 C1                 // mulss        xmm0,xmm1
 0F5B D2                    // cvtdq2ps     xmm2,xmm2
end
:_CFont__SetSlantRefPoint_2
hex
 F3 0F5E 05 D01C015A        // divss        xmm0,[5A011CD0]         [1080.00]                                                   CHANGE THIS ADDR!!
 66 0F6E CE                 // movd         xmm1,esi
 F3 0F2C C0                 // cvttss2si    eax,xmm0
 0F5B C9                    // cvtdq2ps     xmm1,xmm1
 66 0F6E C0                 // movd         xmm0,eax
 0F5B C0                    // cvtdq2ps     xmm0,xmm0
 F3 0F5C D0                 // subss        xmm2,xmm0
 F3 0F11 54 24 04           // movss        [esp+04],xmm2
 66 0F6E 02                 // movd         xmm0,[edx]
 0F5B C0                    // cvtdq2ps     xmm0,xmm0
end
:_CFont__SetSlantRefPoint_3
hex
 F3 0F59 05 C472015A        // mulss        xmm0,[5A0172C4]         [50.00]         HUD_AREA_POS_X = 50.0f;                     CHANGE THIS ADDR!!
 F3 0F5E 05 D01C015A        // divss        xmm0,[5A011CD0]         [1080.00]                                                   CHANGE THIS ADDR!!
 F3 0F2C C0                 // cvttss2si    eax,xmm0
 66 0F6E C0                 // movd         xmm0,eax
 B8 00947100                // mov          eax,00719400            [0424448B]      CFont::SetSlantRefPoint(float, float)
 0F5B C0                    // cvtdq2ps     xmm0,xmm0
 F3 0F5C C8                 // subss        xmm1,xmm0
 F3 0F11 0C 24              // movss        [esp],xmm1
 FF D0                      // call         eax
end
:_CFont__SetSlant
hex // CFont::SetSlant(HUD_AREA_SLANT);
 F3 0F10 05 9872015A        // movss    xmm0,[5A017298]             [0.14]                                                      CHANGE THIS ADDR!!
 83 C4 04                   // add      esp,04                      4
 B8 20947100                // mov      eax,00719420                [0424448B]      CFont::SetSlant(float value)
 F3 0F11 04 24              // movss    [esp],xmm0
 FF D0                      // call     eax
end
hex
 E8 BEF91800                // call     0071A820                    CFont::PrintStringFromBottom(float x, float y, char *text)
 E9 2ECA4EFC                // jmp      0058AE62
end

:_Value_1080
hex
 00 00 00 00
end
:HUD_AREA_POS_X
hex
 00 00 00 00
end
:HUD_AREA_POS_Y
hex
 00 00 00 00
end
:HUD_AREA_SLANT
hex
 00 00 00 00
end

{======================================================================
======================================================================}
:ClassicHudLoop
if 31@ == 1 
then
    03F0: enable_text_draw 1 
    0A8D: 29@ = read_memory 0xBAB1DC size 2 virtual_protect 0 // CHud::m_ItemToFlash
    1@ = Actor.Health($PLAYER_ACTOR)
    gosub @ConfigDrawText
    0AB1: @ReadRGB 1 @HealthColours ret 2@ 3@ 4@
    0340: set_text_draw_RGBA 2@ 3@ 4@ 255
        
    if 1@ > 999 
    then 1@ = 999 
    end
        
    if 88B7:   not test 30@ bit 3 
    then
        if or
        10 > 1@ 
        29@ == 4 
        then
            if 32@ > 300 
            then
                32@ = 0 
                if 08B7:   test 30@ bit 0 
                then 08C3: clear 30@ bit 0 
                else 08BD: set 30@ bit 0 
                end
            end
        else
            08BD: set 30@ bit 0 
            32@ = 0 
        end
    end
        
    if 08B7:   test 30@ bit 0 
    then
        0AD3: 2@v = format "%03d" 1@  
        0ADF: add_dynamic_GXT_entry "III_HEA" text 2@v 
        0AB1: @ReadPosition 1 @Health_Pos ret icon_pos 5@ 6@ text_pos 7@ 8@
        033E: set_draw_text_position 7@ 8@ GXT "III_HEA" 
        gosub @ConfigDrawText
        0AB1: @ReadRGB 1 @HealthColours ret 2@ 3@ 4@
        0340: set_text_draw_RGBA 2@ 3@ 4@ 255
        033E: set_draw_text_position 5@ 6@ GXT "III_HIC" 
    end
        
    if gosub @PlayerCarSunk 
    then
        0652: 1@ = integer_stat 4080 
        0653: 2@ = float_stat 225 // Lung capacity
        0653: 3@ = float_stat 22 // Stamina
        005B: 2@ += 3@ // (float) 
        2@ *= 1.5 
        2@ += 1000.0
        if 1150.0 > 2@ 
        then 2@ = 1150.0 
        end
        0073: 1@ /= 2@ // (float) 
        1@ *= 100.0 
        0092: 1@ = float 1@ to_integer 
        gosub @ConfigDrawText 
        0AB1: @ReadRGB 1 @OxygenColours ret 2@ 3@ 4@
        0340: set_text_draw_RGBA 2@ 3@ 4@ 255
            
        if 29@ == 10 
        then
            if 33@ > 300 
            then
                33@ = 0 
                if 08B7:   test 30@ bit 2 
                then 08C3: clear 30@ bit 2 
                else 08BD: set 30@ bit 2 
                end
            end
        else
            08BD: set 30@ bit 2 
            33@ = 0 
        end
            
        if 08B7:   test 30@ bit 2 
        then
            0AD3: 2@v = format "^%03d" 1@  
            0ADF: add_dynamic_GXT_entry "III_OXY" text 2@v 
            0AB1: @ReadPosition 1 @Armour_Pos ret icon_pos 5@ 6@ text_pos 7@ 8@
            033E: set_draw_text_position 5@ 6@ GXT "III_OXY" 
        end
    else
        04DD: 1@ = actor $PLAYER_ACTOR armour 
        if 1@ > 0 
        then
            gosub @ConfigDrawText 
            0AB1: @ReadRGB 1 @ArmourColours ret 2@ 3@ 4@
            0340: set_text_draw_RGBA 2@ 3@ 4@ 255
            if 1@ > 999 
            then 1@ = 999 
            end
            if 29@ == 3 
            then
                if 33@ > 300 
                then
                    33@ = 0 
                    if 08B7:   test 30@ bit 1 
                    then 08C3: clear 30@ bit 1 
                    else 08BD: set 30@ bit 1 
                    end
                end
            else
                08BD: set 30@ bit 1 
                33@ = 0 
            end
            if 08B7:   test 30@ bit 1 
            then
                0AD3: 2@v = format "%03d" 1@  
                0ADF: add_dynamic_GXT_entry "III_ARM" text 2@v 
                0AB1: @ReadPosition 1 @Armour_Pos ret icon_pos 5@ 6@ text_pos 7@ 8@
                033E: set_draw_text_position 7@ 8@ GXT "III_ARM" 
                gosub @ConfigDrawText 
                0AB1: @ReadRGB 1 @ArmourColours ret 2@ 3@ 4@
                0340: set_text_draw_RGBA 2@ 3@ 4@ 255
                033E: set_draw_text_position 5@ 6@ GXT "III_AIC" 
            end
        end
    end
end

// Styled Text 3
{0A8D: 0@ = read_memory 0xBAADC0 size 1 virtual_protect 0 
if 0@ > 0 
then
    0ADF: add_dynamic_GXT_entry "EMUTXT3" text 0xBAADC0 
    03E0: draw_text_behind_textures 1 
    033F: set_text_draw_letter_size 2.0 3.9 
    03E4: set_text_draw_align_right 1 
    0349: set_text_draw_font 3 
    060D: draw_text_shadow 3 rgba 0 0 0 255 
    0340: set_text_draw_RGBA 170 123 87 255 
    033E: set_draw_text_position 616.0 367.0 GXT "EMUTXT3" 
end}
return

:ConfigDrawText
03E0: draw_text_behind_textures 1 
0AB1: @ReadSize 0 ret 9@ 10@
033F: set_text_draw_letter_size 9@ 10@
0349: set_text_draw_font 3 
060D: draw_text_shadow 1 rgba 0 0 0 255 
return 

:PlayerCarSunk
if 8965:   not actor $PLAYER_ACTOR swimming 
then
    if and
    00DF:   actor $PLAYER_ACTOR driving
    84A7:   not actor $PLAYER_ACTOR driving_boat 
    then
        0811: 1@ = actor $PLAYER_ACTOR used_car 
        02BF:   car 1@ sunk 
    end
else 0485:   return_true
end
return 

:IsHudEnabled
0A8D: 1@ = read_memory 0xA444A0 size 4 virtual_protect 0 // Hud enabled
0A8D: 2@ = read_memory 0xB6F065 size 1 virtual_protect 0 // Cutscenes widescreen mode
if and
1@ == 1 // hud enabled
2@ == 0 // cutscenes off
then 0485:   return_true
else 059A:  return_false
end
return